theory AltSuperNormEnv
  imports WTLemma
begin
  
definition super_norm_use_env where    
  "super_norm_use_env r_s r_x = (\<lambda> x. if r_s x = OwnPerm \<and> r_x x = NoPerm then NoPerm else r_s x)" 
  
lemma self_snorm_leq_use_env: "leq_use_env (super_norm_use_env r_s r_x) r_s"
  apply (simp add: leq_use_env_def)
  apply (simp add: super_norm_use_env_def)
  apply (auto)
   apply (case_tac "r_s x")
     apply (auto)
  apply (case_tac "r_s x")
    apply (auto)
  done
    
lemma rhs_snorm_leq_use_env: "\<lbrakk> leq_use_env r_x r_s; leq_use_env r_x r_ex \<rbrakk> \<Longrightarrow> leq_use_env r_x (super_norm_use_env r_s r_ex)"
  apply (simp add: leq_use_env_def)
  apply (simp add: super_norm_use_env_def)
  apply (auto)
  apply (erule_tac x="x" in allE)
  apply (erule_tac x="x" in allE)
  apply (case_tac "r_s x")
    apply (auto)
  done
    
lemma rhs_snorm_leq_use_env2: "\<lbrakk> leq_use_env r_x r_ex; leq_use_env r_ex r_s \<rbrakk> \<Longrightarrow> leq_use_env r_x (super_norm_use_env r_s r_ex)"    
  apply (rule_tac rhs_snorm_leq_use_env)
   apply (rule_tac r_sb="r_ex" in trans_leq_use_env)
    apply (auto)
  done
  
lemma diff_snorm_leq_use_env: "\<lbrakk> leq_use_env r_ex r_s; leq_use_env r_x (diff_use_env r_s r_ex) \<rbrakk> \<Longrightarrow> leq_use_env (super_norm_use_env r_s r_x) (diff_use_env r_s r_ex)"    
  apply (simp add: leq_use_env_def)
  apply (simp add: diff_use_env_def)
  apply (auto)
  apply (erule_tac x="x" in allE)
  apply (erule_tac x="x" in allE)
  apply (simp add: super_norm_use_env_def)
  apply (auto)
  apply (case_tac "r_s x")
    apply (auto)
   apply (case_tac "r_ex x")
     apply (auto)
  apply (case_tac "r_s x")
    apply (auto)
   apply (case_tac "r_ex x")
     apply (auto)
  apply (case_tac "r_ex x")
    apply (auto)
  apply (case_tac "r_x x")
    apply (auto)
  done    
   
lemma dist_diff_snorm_leq_use_env: "\<lbrakk> leq_use_env r_ex r_s; leq_use_env r_xb (diff_use_env r_xa r_ex) \<rbrakk> \<Longrightarrow>
  leq_use_env (super_norm_use_env r_s r_xb) (diff_use_env (super_norm_use_env r_s r_xa) r_ex)"    
  apply (simp add: leq_use_env_def)
  apply (simp add: diff_use_env_def)
  apply (auto)
  apply (erule_tac x="x" in allE)
  apply (erule_tac x="x" in allE)
  apply (simp add: super_norm_use_env_def)
  apply (auto)
      apply (case_tac "r_xb x")
        apply (auto)
      apply (case_tac "r_ex x")
        apply (auto)
     apply (case_tac "r_s x")
       apply (auto)
     apply (case_tac "r_ex x")
       apply (auto)
    apply (case_tac "r_s x")
      apply (auto)
    apply (case_tac "r_ex x")
      apply (auto)
   apply (case_tac "r_s x")
     apply (auto)
   apply (case_tac "r_ex x")
     apply (auto)
  apply (case_tac "r_s x")
    apply (auto)
   apply (case_tac "r_ex x")
     apply (auto)
  apply (case_tac "r_ex x")
    apply (auto)
  apply (case_tac "r_xb x")
    apply (auto)
  done
    
lemma dist_snorm_leq_use_env: "\<lbrakk> leq_use_env r_ex r_exa; leq_use_env r_ex r_exb \<rbrakk> \<Longrightarrow> leq_use_env (super_norm_use_env r_s r_ex) (super_norm_use_env (super_norm_use_env r_s r_exa) r_exb)"
  apply (simp add: leq_use_env_def)
  apply (auto)
  apply (erule_tac x="x" in allE)
  apply (erule_tac x="x" in allE)
  apply (simp add: super_norm_use_env_def)
  apply (auto)
    apply (case_tac "r_ex x")
      apply (auto)
   apply (case_tac "r_ex x")
     apply (auto)
  apply (case_tac "r_s x")
    apply (auto)
  done    
    
lemma cancel_snorm_use_env: "\<lbrakk> leq_use_env r_xb r_xa \<rbrakk> \<Longrightarrow> super_norm_use_env (super_norm_use_env r_s r_xa) r_xb = super_norm_use_env r_s r_xb"    
  apply (case_tac "\<forall> x. super_norm_use_env (super_norm_use_env r_s r_xa) r_xb x = super_norm_use_env r_s r_xb x")
   apply (auto)
  apply (simp add: leq_use_env_def)
  apply (simp add: super_norm_use_env_def)
  apply (erule_tac x="x" in allE)
  apply (case_tac "r_s x = OwnPerm \<and> r_xa x = NoPerm")
   apply (auto)
   apply (case_tac "r_xb x")
     apply (auto)
  apply (case_tac "r_s x = OwnPerm \<and> r_xa x = NoPerm")
   apply (auto)
  apply (case_tac "r_s x = OwnPerm \<and> r_xb x = NoPerm")
   apply (auto)
  done
    
lemma well_typed_sstr_end_perm: "\<lbrakk> well_typed env delta r_s1 e tau r_s2 rx \<rbrakk> \<Longrightarrow> well_typed env delta r_s1 e tau (super_norm_use_env r_s1 r_s2) rx"   
  apply (induct e arbitrary: env r_s1 tau r_s2 rx)
       apply (auto)
    (* const + op cases *)
          apply (rule_tac self_snorm_leq_use_env)
         apply (rule_tac rhs_snorm_leq_use_env2)
          apply (auto)
        apply (rule_tac self_snorm_leq_use_env)
       apply (rule_tac rhs_snorm_leq_use_env2)
        apply (auto)
    (* var case *)
      apply (rule_tac x="r_ex" in exI)
      apply (auto)
       apply (rule_tac diff_snorm_leq_use_env)
        apply (rule_tac dist_comp_leq_use_env)
         apply (auto)
      apply (rule_tac rhs_snorm_leq_use_env2)
       apply (auto)
      apply (rule_tac r_sb="diff_use_env r_s1 (comp_use_env (ereq_use_env (owner_name delta x) tau_x) r_ex)" in trans_leq_use_env)
       apply (rule_tac self_diff_leq_use_env)
      apply (auto)
    (* pair case *)
     apply (rule_tac x="super_norm_use_env r_s1 r_s2a" in exI)
     apply (rule_tac x="super_norm_use_env (super_norm_use_env r_s1 r_s2a) r_s3" in exI)
     apply (rule_tac x="rx1" in exI)
     apply (auto)
     apply (rule_tac x="rx2" in exI)
     apply (auto)
        apply (cut_tac env="env" and ?r_s1.0="r_s2a" and r_c="super_norm_use_env r_s1 r_s2a" and e="e2" and ?r_s2.0="r_s3" in well_typed_incr_start_perm)
          apply (auto)
        apply (rule_tac rhs_snorm_leq_use_env)
         apply (rule_tac well_typed_perm_leq)
         apply (auto)
        apply (rule_tac id_leq_use_env)
       apply (rule_tac rhs_snorm_leq_use_env2)
        apply (simp)
       apply (rule_tac rhs_snorm_leq_use_env2)
        apply (rule_tac well_typed_perm_leq)
        apply (auto)
       apply (rule_tac well_typed_perm_leq)
       apply (auto)
      apply (rule_tac rhs_snorm_leq_use_env2)
       apply (simp)
      apply (rule_tac rhs_snorm_leq_use_env2)
       apply (rule_tac well_typed_perm_leq)
       apply (auto)
      apply (rule_tac well_typed_perm_leq)
      apply (auto)
     apply (cut_tac r_s="r_s1" and r_xa="r_s2a" and r_xb="r_s3" in cancel_snorm_use_env)
      apply (rule_tac well_typed_perm_leq)
      apply (auto)
     apply (cut_tac r_sc="r_s2" and r_sb="diff_use_env r_s3 r_ex" and r_sa="r_s1" in trans_leq_use_env)
       apply (rule_tac diff_leq_use_env)
       apply (rule_tac r_sb="r_s2a" in trans_leq_use_env)
        apply (rule_tac well_typed_perm_leq)
        apply (auto)
      apply (rule_tac well_typed_perm_leq)
      apply (auto)
     apply (rule_tac x="r_ex" in exI)
     apply (auto)
      apply (rule_tac dist_diff_snorm_leq_use_env)
       apply (simp_all)
     apply (rule_tac rhs_snorm_leq_use_env2)
      apply (simp_all)
    (* if case *)
    apply (rule_tac x="rx'" in exI)
    apply (rule_tac x="super_norm_use_env r_s1 r_s2a" in exI)
    apply (auto)
    apply (rule_tac x="rx1" in exI)
    apply (auto)
     apply (rule_tac r_c="super_norm_use_env (super_norm_use_env r_s1 r_s2a) r_s2" in well_typed_decr_end_perm)
       apply (cut_tac env="env" and ?r_s1.0="r_s2a" and r_c="super_norm_use_env r_s1 r_s2a" and ?r_s2.0="r_s2" and e="e2" in well_typed_incr_start_perm)
         apply (auto)
       apply (rule_tac rhs_snorm_leq_use_env)
        apply (rule_tac well_typed_perm_leq)
        apply (auto)
       apply (rule_tac id_leq_use_env)
      apply (rule_tac dist_snorm_leq_use_env)
       apply (rule_tac well_typed_perm_leq)
       apply (auto)
      apply (rule_tac id_leq_use_env)
     apply (rule_tac rhs_snorm_leq_use_env2)
      apply (rule_tac well_typed_perm_leqx)
      apply (auto)
     apply (rule_tac r_sb="r_s2a" in trans_leq_use_env)
      apply (rule_tac well_typed_perm_leq)
      apply (auto)
     apply (rule_tac well_typed_perm_leq)
     apply (auto)
    apply (rule_tac x="rx2" in exI)
    apply (auto)
    apply (rule_tac r_c="super_norm_use_env (super_norm_use_env r_s1 r_s2a) r_s2" in well_typed_decr_end_perm)
      apply (cut_tac env="env" and ?r_s1.0="r_s2a" and r_c="super_norm_use_env r_s1 r_s2a" and ?r_s2.0="r_s2" and e="e3" in well_typed_incr_start_perm)
        apply (auto)
      apply (rule_tac rhs_snorm_leq_use_env)
       apply (rule_tac well_typed_perm_leq)
       apply (auto)
      apply (rule_tac id_leq_use_env)
     apply (rule_tac dist_snorm_leq_use_env)
      apply (rule_tac well_typed_perm_leq)
      apply (auto)
     apply (rule_tac id_leq_use_env)
    apply (rule_tac rhs_snorm_leq_use_env2)
     apply (rule_tac well_typed_perm_leqx)
     apply (auto)
    apply  (rule_tac r_sb="r_s2a" in trans_leq_use_env)
     apply (rule_tac well_typed_perm_leq)
     apply (auto)
    apply (rule_tac well_typed_perm_leq)
    apply (auto)
    (* lam case *)
   apply (rule_tac x="rxa" in exI)
   apply (auto)
   apply (rule_tac x="r_ex" in exI)
   apply (auto)
    apply (rule_tac diff_snorm_leq_use_env)
     apply (auto)
   apply (rule_tac rhs_snorm_leq_use_env2)
    apply (auto)
   apply (rule_tac r_sb="diff_use_env r_s1 r_ex" in trans_leq_use_env)
    apply (rule_tac self_diff_leq_use_env)
   apply (auto)
    (* app case *)
  apply (rule_tac x="t1" in exI)
  apply (rule_tac x="r" in exI)
  apply (rule_tac x="a" in exI)
  apply (rule_tac x="super_norm_use_env r_s1 r_s2a" in exI)
  apply (rule_tac x="rx1" in exI)
  apply (auto)
  apply (rule_tac x="rx2" in exI)
  apply (rule_tac x="super_norm_use_env (super_norm_use_env r_s1 r_s2a) r_s3" in exI)
  apply (auto)
   apply (cut_tac env="env" and ?r_s1.0="r_s2a" and r_c="super_norm_use_env r_s1 r_s2a" and ?r_s2.0="r_s3" and e="e2" in well_typed_incr_start_perm)
     apply (auto)
   apply (rule_tac rhs_snorm_leq_use_env)
    apply (rule_tac well_typed_perm_leq)
    apply (auto)
   apply (rule_tac id_leq_use_env)
  apply (rule_tac x="r_ex" in exI)
  apply (auto)
    apply (rule_tac r_sb="diff_use_env (super_norm_use_env r_s1 r_s3) (comp_use_env (comp_use_env rx1 (lift_use_env rx2 r)) r_ex)" in trans_leq_use_env)
     apply (rule_tac dist_diff_leq_use_env)
     apply (rule_tac dist_snorm_leq_use_env)
      apply (rule_tac well_typed_perm_leq)
      apply (auto)
     apply (rule_tac id_leq_use_env)
    apply (rule_tac dist_diff_snorm_leq_use_env)
     apply (rule_tac dist_comp_leq_use_env)
      apply (rule_tac r_sb="r_s3" in trans_leq_use_env)
       apply (rule_tac r_sb="r_s2a" in trans_leq_use_env)
        apply (rule_tac well_typed_perm_leq)
        apply (auto)
    apply (rule_tac well_typed_perm_leq)
    apply (auto)
   apply (rule_tac rhs_snorm_leq_use_env2)
    apply (auto)
   apply (rule_tac rhs_snorm_leq_use_env2)
    apply (rule_tac well_typed_perm_leq)
    apply (auto)
   apply (rule_tac well_typed_perm_leq)
   apply (auto) 
  apply (rule_tac rhs_snorm_leq_use_env2)
   apply (auto)
  apply (rule_tac r_sb="diff_use_env r_s3 (comp_use_env (comp_use_env rx1 (lift_use_env rx2 r)) r_ex)" in trans_leq_use_env)
   apply (rule_tac diff_leq_use_env)
   apply (rule_tac r_sb="r_s2a" in trans_leq_use_env)
    apply (rule_tac well_typed_perm_leq)
    apply (auto)
  apply (rule_tac well_typed_perm_leq)
  apply (auto)
  done    
    
lemma snorm_diff_use_env: "(\<exists> r_ex. super_norm_use_env r_s r_x = diff_use_env r_s r_ex \<and> leq_use_env r_ex r_s)"    
  apply (rule_tac x="\<lambda> x. if r_s x = OwnPerm \<and> r_x x = NoPerm then OwnPerm else NoPerm" in exI)  
  apply (auto)
   apply (case_tac "\<forall> x. super_norm_use_env r_s r_x x = diff_use_env r_s (\<lambda>x. if r_s x = OwnPerm \<and> r_x x = NoPerm then OwnPerm else NoPerm) x")
    apply (auto)
   apply (simp add: super_norm_use_env_def)
   apply (simp add: diff_use_env_def)
   apply (case_tac "r_s x = OwnPerm \<and> r_x x = NoPerm")
    apply (auto)
  apply (simp add: leq_use_env_def)
  done  
  
end