theory InferSound
  imports InferDef
begin

    (* ##### inference correctness lemma 1 *)

lemma ivl_const_main: "\<lbrakk> dir_sol_sat t_sub p_sub c_list; const_scheme x ds tau c_list ds'\<rbrakk> \<Longrightarrow> full_subst_type t_sub p_sub tau_n tau \<in> const_type x"
  apply (case_tac x)
              apply (auto)
              apply (simp_all add: full_subst_type_def)
              apply (simp_all add: pure_fun_s_def)
              apply (simp_all add: pure_fun_def)
              apply (simp_all add: unlim_def)
        apply (simp_all add: is_own_def)
      apply (auto)
  done
    
lemma ivl_op_main: "full_subst_type t_sub p_sub tau_n (op_scheme x) = op_type x"
  apply (case_tac x)
       apply (auto)
       apply (simp_all add: full_subst_type_def)
       apply (simp_all add: pure_fun_s_def)
       apply (simp_all add: pure_fun_def)
  done
  
lemma ivl_pair_ih: "\<lbrakk> \<And>env tau r_s r_x r_m c_list ds ds'.
           \<lbrakk>infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list\<rbrakk>
           \<Longrightarrow> well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m));
  infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list\<rbrakk> \<Longrightarrow>
  well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m))"    
  apply (auto)
  done
    
lemma ivl_if_ih: "\<lbrakk> \<And>env tau r_s r_x r_m c_list ds ds'.
           \<lbrakk>infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list\<rbrakk>
           \<Longrightarrow> well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m));
  infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list \<rbrakk> \<Longrightarrow>
  well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m))"    
  apply (auto)
  done
    
lemma ivl_lam_ih: "\<lbrakk> \<And>env tau r_s r_x r_m c_list ds ds'.
           \<lbrakk>infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list\<rbrakk>
           \<Longrightarrow> well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m));
   infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list \<rbrakk> \<Longrightarrow>
  well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m))"  
  apply (auto)
  done
    
lemma ivl_app_ih: "\<lbrakk> \<And>env tau r_s r_x r_m c_list ds ds'.
           \<lbrakk>infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list\<rbrakk>
           \<Longrightarrow> well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m));
   infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list\<rbrakk> \<Longrightarrow>
  well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
                (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m))
                (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m))"    
  apply (auto)
  done
    
lemma ivl_var_leq_perm: "\<lbrakk> req_type tau_n = Prim \<rbrakk> \<Longrightarrow>
  leq_perm (end_req_perm (full_subst_type t_sub p_sub tau_n (VarScheme b)))
      (dir_subst_penv t_sub p_sub (one_var_env (Var x) (XType b)) (Var x))"
  apply (simp add: full_subst_type_def)
  apply (simp add: end_req_perm_def)
  apply (simp add: dir_subst_penv_def)
  apply (simp add: one_var_env_def)
  apply (case_tac "t_sub b")
   apply (auto)
  apply (case_tac "req_type a")
    apply (auto)
  done
 
lemma dir_aff_leq: "\<lbrakk> dir_subst_type t_sub p_sub tau_v tau; aff_leq (req_type tau) r \<rbrakk> \<Longrightarrow>
  aff_leq (req_type (full_subst_type_f t_sub p_sub tau_n tau_v)) r"
  apply (induct tau_v)
         apply (auto)
  done
 
lemma dir_subst_type_eq: "\<lbrakk> dir_subst_type t_sub p_sub tau_v tau \<rbrakk> \<Longrightarrow> full_subst_type t_sub p_sub tau_n tau_v = tau"    
  apply (induct tau_v arbitrary: tau)
         apply (auto)
         apply (simp_all add: full_subst_type_def)
  done
    
lemma mini_disj_lift_use_env_rev: "\<lbrakk> mini_disj_use_env r_x r_s \<rbrakk> \<Longrightarrow> mini_disj_use_env r_x (lift_use_env r_s r)"    
  apply (case_tac r)
    apply (auto)
  apply (simp add: mini_disj_use_env_def)
  done
  
lemma infer_valid_left: "\<lbrakk> infer_type env ds e tau r_s r_x r_m c_list ds'; dir_sol_sat t_sub p_sub c_list; req_type tau_n = Prim \<rbrakk> \<Longrightarrow>
  well_typed (dir_subst_tenv (fill_tsub t_sub tau_n) env) delta (dir_subst_penv t_sub p_sub r_s) e (full_subst_type t_sub p_sub tau_n tau)
    (diff_use_env (dir_subst_penv t_sub p_sub r_s) (dir_subst_penv t_sub p_sub r_m)) (diff_use_env (dir_subst_penv t_sub p_sub r_x) (dir_subst_penv t_sub p_sub r_m))"
  apply (induct e arbitrary: env tau r_s r_x r_m c_list ds ds')
        apply (auto)
    (* const case *)
             apply (rule_tac ivl_const_main)
              apply (simp_all)
            apply (rule_tac self_diff_leq_use_env)
           apply (rule_tac id_leq_use_env)
    (* op case *)
          apply (rule_tac ivl_op_main)
         apply (rule_tac self_diff_leq_use_env)
        apply (rule_tac id_leq_use_env)
    (* var case *)
       apply (simp add: dir_subst_tenv_def)
       apply (simp add: fill_tsub_def)
       apply (case_tac "t_sub a")
        apply (auto)
        apply (simp add: full_subst_type_def)
       apply (simp add: full_subst_type_def)
      apply (simp add: fill_tsub_def)
      apply (cut_tac x="Var x'" and tau="full_subst_type t_sub p_sub tau_n (VarScheme a)" and
        r_s="dir_subst_penv t_sub p_sub (one_var_env (Var x') (XType a))" in ereq_leq_use_envx)
       apply (rule_tac ivl_var_leq_perm)
       apply (auto)
      apply (rule_tac x="dir_subst_penv t_sub p_sub (one_var_env (Var x') (XType a))" in exI)
      apply (rule_tac x="full_subst_type t_sub p_sub tau_n (VarScheme a)" in exI)
      apply (simp add: full_subst_type_def)
      apply (simp add: dir_subst_tenv_def)
      apply (auto)
          apply (case_tac "t_sub a")
           apply (auto)
         apply (rule_tac dist_diff_leq_use_env_gen)
         apply (rule_tac id_leq_use_env)
        apply (rule_tac dist_comp_leq_use_env)
         apply (simp_all)
       apply (rule_tac id_leq_use_env)
        apply (rule_tac id_leq_use_env)
       apply (rule_tac id_leq_use_env)
      apply (rule_tac dist_diff_leq_use_env_gen)
       apply (simp)
      apply (rule_tac self_comp_leq_use_env2)
    (* pair case. exepected type *)
    (* - prelim: solution satisfaction *)(*
     apply (cut_tac ?cl2.0="semi_disj_crn r_m2 (lift_var_env r_x1 (SVar p)) d @ semi_disj_crn r_m1 (comp_var_env r_s2 (lift_var_env r_x2 (SVar p))) d @ cl1 @ cl2" in sol_sat_append2)
      apply (auto)
     apply (cut_tac ?cl2.0="semi_disj_crn r_m1 (comp_var_env r_s2 (lift_var_env r_x2 (SVar p))) d @ cl1 @ cl2" in sol_sat_append2)
      apply (auto)*)
     apply (simp add: full_subst_type_def)
     apply (cut_tac ?cl2.0="semi_disj_crn r_m2 r_x1 d @ semi_disj_crn r_m1 r_s2 d @ cl1 @ cl2" in sol_sat_append2)
      apply (auto)
     apply (cut_tac ?cl2.0="semi_disj_crn r_m1 r_s2 d @ cl1 @ cl2" in sol_sat_append2)
      apply (auto)
     apply (cut_tac ?cl2.0="cl1 @ cl2" in sol_sat_append2)
      apply (auto)
    (* - prelim: initial disjointness statements *)
     apply (cut_tac r_x="r_m2" and r_s="r_x1" in sol_sat_mini_disj_use_env)
        apply (rule_tac sol_sat_append1)
        apply (auto)
       apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
        apply (simp)
       apply (rule_tac comp_sub_dom2)
       apply (rule_tac comp_sub_dom1)
       apply (rule_tac infer_m_sub_dom)
       apply (simp)
      apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom1)
      apply (rule_tac comp_sub_dom2)
      apply (rule_tac lift_sub_dom2)
      apply (rule_tac id_sub_dom)
     apply (cut_tac r_x="r_m1" and r_s="r_s2" in sol_sat_mini_disj_use_env)
        apply (rule_tac sol_sat_append1)
        apply (auto)
       apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
        apply (simp)
       apply (rule_tac comp_sub_dom1)
       apply (rule_tac comp_sub_dom1)
       apply (rule_tac infer_m_sub_dom)
       apply (simp)
      apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom2)
      apply (rule_tac comp_sub_dom1)
      apply (rule_tac id_sub_dom)
     apply (cut_tac r_x="lift_var_env r_x1 (SVar p)" and r_s="lift_var_env r_x2 (SVar p)" in sol_sat_disj_use_env)
        apply (rule_tac sol_sat_append1)
        apply (auto)
       apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
        apply (simp)
       apply (rule_tac comp_sub_dom1)
       apply (rule_tac comp_sub_dom2)
       apply (rule_tac id_sub_dom)
      apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom2)
      apply (rule_tac comp_sub_dom2)
      apply (rule_tac id_sub_dom)
(*
     apply (cut_tac r_x="comp_var_env r_s1 (lift_var_env r_x1 (SVar p))" and r_s="comp_var_env r_s2 (lift_var_env r_x2 (SVar p))" and d="d" in sol_sat_disj_use_env)
        apply (rule_tac ?cl2.0="cl1 @ cl2" in sol_sat_append1)
        apply (simp)
       apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
        apply (simp)
       apply (rule_tac comp_sub_dom1)
       apply (rule_tac id_sub_dom)
      apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p))) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom2)
      apply (rule_tac id_sub_dom)*)    
    (* - expected permission environments *)
     apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub (comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p)))
        (comp_var_env r_s2 (lift_var_env r_x2 (SVar p))))) (dir_subst_penv t_sub p_sub r_m1)" in exI)
     apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub (comp_var_env (comp_var_env r_s1 (lift_var_env r_x1 (SVar p)))
        (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))))
        (dir_subst_penv t_sub p_sub (comp_var_env r_m1 r_m2))" in exI)
     apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x1) (dir_subst_penv t_sub p_sub r_m1)" in exI)
     apply (auto)
    (* - induction for e1 *)
      apply (cut_tac env="env" and delta="delta" and ds="ds" and e="e1" and tau="t1" and r_s="r_s1" and r_x="r_x1" and r_m="r_m1" and
        c_list="cl1" and ds'="ds2" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_pair_ih)
         apply (auto)
        apply (simp add: full_subst_type_def)
       apply (rule_tac sol_sat_append1)
       apply (simp)
    (* > remove [S2 + lift(X2, p)] using the precision lemma *)
      apply (simp add: comp_sol_subst_penv)
      apply (rule_tac well_typed_comp_perms_prec)
(*
    (* > get into form [(S1 + lift(X1, p)) - M1] + [(S2 + lift(X2, p)) - M1] *)
      apply (simp add: comp_sol_subst_penv)
      apply (rule_tac t="diff_use_env
              (comp_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))))
                (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))))
              (dir_subst_penv t_sub p_sub r_m1)" and
        s="comp_use_env (diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))))
              (dir_subst_penv t_sub p_sub r_m1))
                (diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))))
              (dir_subst_penv t_sub p_sub r_m1))" in subst)
       apply (rule_tac dist_diff_comp_use_env)
    (* > increase [(S2 + lift(X2, p)) - M1] to (S2 + lift(X2, p)) *)
      apply (rule_tac r_c="comp_use_env
              (diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))))
                (dir_subst_penv t_sub p_sub r_m1))
              (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))))" in well_typed_decr_end_perm)
    (* > remove (S2 + lift(X2, p)) from the start + end perms *)
        apply (rule_tac well_typed_comp_perms)*)
    (* > transform [(S1 + lift(X1, p)) - M1] into (S1 - M1) + lift(X1 - M1, p) *)
       apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))" and
              s="lift_use_env (dir_subst_penv t_sub p_sub r_x1) (sol_subst_perm p_sub (SVar p))" in subst)
        apply (rule_tac lift_sol_subst_penv)
       apply (simp_all)
      apply (rule_tac t="diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p))) (dir_subst_penv t_sub p_sub r_m1)"
          and s="comp_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub r_m1))
            (diff_use_env (lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p)) (dir_subst_penv t_sub p_sub r_m1))" in subst)
       apply (rule_tac dist_diff_comp_use_env)
      apply (simp add: lift_diff_use_env)
    (* > remove lifts and cancel X1 *)
      apply (rule_tac well_typed_comp_lift_perms)
       apply (cut_tac r_s="dir_subst_penv t_sub p_sub r_s1" and r_x="dir_subst_penv t_sub p_sub r_x1" in cancel_comp_use_env2)
        apply (rule_tac env="env" and e="e1" and c_list="cl1" in infer_x_leq_use_env)
        apply (auto)
       apply (cut_tac r_s="diff_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub r_m1)" and
          r_x="diff_use_env (dir_subst_penv t_sub p_sub r_x1) (dir_subst_penv t_sub p_sub r_m1)" in cancel_comp_use_env2)
        apply (rule_tac dist_diff_leq_use_env)
        apply (rule_tac env="env" and e="e1" and c_list="cl1" in infer_x_leq_use_env)
        apply (auto)
    (* - proof of bound changes *)
       apply (simp add: full_subst_type_def)
      apply (rule_tac self_diff_leq_use_env)
(*
       apply (rule_tac dist_comp_leq_use_env)
        apply (rule_tac self_comp_leq_use_env1)
       apply (rule_tac comp_leq_use_env2)
       apply (rule_tac self_diff_leq_use_env)
      apply (rule_tac comp_leq_use_env1)
      apply (rule_tac dist_diff_leq_use_env)
      apply (rule_tac comp_leq_use_env2)
      apply (rule_tac lift_leq_var_env)
      apply (rule_tac id_leq_use_env)*)
    (* - induction for e2. *)
     apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x2) (dir_subst_penv t_sub p_sub r_m2)" in exI)
     apply (cut_tac env="env" and delta="delta" and ds="ds2" and e="e2" and tau="t2" and r_s="r_s2" and r_x="r_x2" and r_m="r_m2" and
        c_list="cl2" and ds'="ds3" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_pair_ih)
        apply (auto)
            apply (simp add: full_subst_type_def)
           apply (rule_tac sol_sat_append2)
           apply (simp)
          apply (simp add: comp_sol_subst_penv)
    (* > reduce end perms *)
          apply (rule_tac ?r_s2.0="diff_use_env (diff_use_env (comp_use_env
              (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))))
              (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))))) (dir_subst_penv t_sub p_sub r_m2))
              (dir_subst_penv t_sub p_sub r_m1)" and rx="diff_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x2)
              (dir_subst_penv t_sub p_sub r_m2)) (dir_subst_penv t_sub p_sub r_m1)" in well_typed_simul_end_perm)
    (*
           apply (rule_tac ?r_s2.0="diff_use_env (comp_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))))
              (diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))) (dir_subst_penv t_sub p_sub r_m2)))
              (dir_subst_penv t_sub p_sub r_m1)" and rx="diff_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x2)
              (dir_subst_penv t_sub p_sub r_m2)) (dir_subst_penv t_sub p_sub r_m1)" in well_typed_simul_end_perm)*)
             apply (rule_tac well_typed_diff_perms)
              apply (rule_tac well_typed_comp_perms_prec2)
    (* - unroll lifts *)
               apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
                s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))" in subst)
                apply (rule_tac lift_sol_subst_penv)
               apply (rule_tac t="diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))))
                (dir_subst_penv t_sub p_sub r_m2)" and s="comp_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_m2))
                (diff_use_env (lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))) (dir_subst_penv t_sub p_sub r_m2))" in subst)
                apply (rule_tac dist_diff_comp_use_env)
               apply (simp add: lift_diff_use_env)
               apply (rule_tac well_typed_comp_lift_perms)
    (* - cancellations *)
                apply (cut_tac r_s="dir_subst_penv t_sub p_sub r_s2" and r_x="dir_subst_penv t_sub p_sub r_x2" in cancel_comp_use_env2)
                 apply (rule_tac env="env" and e="e2" and c_list="cl2" in infer_x_leq_use_env)
                 apply (auto)
                apply (cut_tac r_s="diff_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_m2)" and
                    r_x="diff_use_env (dir_subst_penv t_sub p_sub r_x2) (dir_subst_penv t_sub p_sub r_m2)" in cancel_comp_use_env2)
                 apply (rule_tac dist_diff_leq_use_env)
                 apply (rule_tac env="env" and e="e2" and c_list="cl2" in infer_x_leq_use_env)
                apply (auto)
               apply (simp add: full_subst_type_def)
               apply (rule_tac self_diff_leq_use_env)
    (* - disjointness used to remove r_s1 *)(*
              apply (rule_tac comm_disj_use_env)
              apply (simp)*)
    (* - proving that r_m1 can be subtracted out *)
             apply (simp add: own_env_vars_def)
             apply (case_tac "dir_subst_penv t_sub p_sub r_s2 x = NoPerm")
              apply (cut_tac e="e2" and ?r_s1.0="dir_subst_penv t_sub p_sub r_s2" and x="x" in well_typed_no_npv_use)
                apply (auto)(*
             apply (case_tac "dir_subst_penv t_sub p_sub r_s1 x \<noteq> OwnPerm")
              apply (cut_tac r_x="dir_subst_penv t_sub p_sub r_m1" and r_s="dir_subst_penv t_sub p_sub r_s1" and x="x" in leq_use_no_own)
                apply (simp)
               apply (rule_tac c_list="cl1" in infer_m_leq_use_env)
               apply (auto)
             apply (cut_tac r_x="dir_subst_penv t_sub p_sub r_s1" and r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p)))"
                and r_ex="dir_subst_penv t_sub p_sub r_s2" in disj_leq_use_env1)
               apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))" in disj_leq_use_env2)
                apply (simp)
               apply (rule_tac self_comp_leq_use_env1)
              apply (rule_tac self_comp_leq_use_env1)
             apply (simp add: disj_use_env_def)*)
             apply (simp add: mini_disj_use_env_def)
    (* - end perm bounds correctness *)
            apply (rule_tac lhs_flip_use_env)
            apply (rule_tac lhs_unroll_dcl_use_env)
            apply (rule_tac id_leq_use_env)
    (*
            apply (rule_tac dist_diff_leq_use_env)
            apply (rule_tac dist_diff_leq_use_env)
            apply (rule_tac lhs_dist_dcl_use_env)
            apply (rule_tac dist_comp_leq_use_env)
    apply (rule_tac self_diff_leq_use_env)
             apply (rule_tac comp_leq_use_env1)
             apply (rule_tac self_diff_leq_use_env)
            apply (rule_tac self_comp_leq_use_env2)*)
           apply (rule_tac rhs_unroll_dcl_use_env)
           apply (rule_tac dist_diff_leq_use_env)
           apply (rule_tac mini_disj_diff_leq_use_env2)
            apply (rule_tac comp_leq_use_env2)
            apply (rule_tac comp_leq_use_env2)
            apply (rule_tac lift_leq_var_env)
            apply (rule_tac id_leq_use_env)
           apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_s2" in mini_disj_leq_use_env2)
            apply (simp)
           apply (rule_tac infer_x_leq_use_env)
           apply (simp)(*
            apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p)))" in disj_leq_use_env1)
             apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))" in disj_leq_use_env2)
              apply (simp)
             apply (rule_tac comp_leq_use_env2)
             apply (rule_tac lift_leq_var_env)
             apply (rule_tac id_leq_use_env)
            apply (rule_tac comp_leq_use_env1)
            apply (rule_tac e="e1" and c_list="cl1" in infer_m_leq_use_env)
            apply (simp)
           apply (rule_tac comp_leq_use_env2)
           apply (rule_tac comp_leq_use_env2)
           apply (rule_tac lift_leq_var_env)
           apply (rule_tac id_leq_use_env)*)
          apply (rule_tac self_diff_leq_use_env)
      (* - native permission bound constraint e1 *)
         apply (rule_tac t="lift_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x1) (dir_subst_penv t_sub p_sub r_m1)) (p_sub p)" and
          s="diff_use_env (lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p)) (dir_subst_penv t_sub p_sub r_m1)" in subst)
          apply (rule_tac lift_diff_use_env)
         apply (simp add: comp_sol_subst_penv)
         apply (rule_tac rhs_unroll_dcl_use_env)
         apply (rule_tac mini_disj_diff_leq_use_env2)
          apply (simp add: lift_sol_subst_penvx)
          apply (rule_tac dist_diff_leq_use_env)
          apply (rule_tac comp_leq_use_env1)
          apply (rule_tac self_comp_leq_use_env2)
         apply (rule_tac r_s="lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p)" in mini_disj_leq_use_env2)
          apply (rule_tac mini_disj_lift_use_env_rev)
          apply (simp)
         apply (rule_tac self_diff_leq_use_env)(*      
          apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))" in disj_leq_use_env1)
           apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p)))" in disj_leq_use_env2)
            apply (rule_tac comm_disj_use_env)
            apply (simp)
           apply (simp add: lift_sol_subst_penvx)
           apply (rule_tac diff_leq_use_env)
           apply (rule_tac self_comp_leq_use_env2)
          apply (rule_tac comp_leq_use_env1)
          apply (rule_tac c_list="cl2" in infer_m_leq_use_env)
          apply (simp)
         apply (rule_tac dist_diff_leq_use_env)
         apply (simp add: lift_sol_subst_penvx)
         apply (rule_tac comp_leq_use_env1)
         apply (rule_tac self_comp_leq_use_env2)*)
      (* - native permission bound constraint e2 *)
        apply (rule_tac t="lift_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x2) (dir_subst_penv t_sub p_sub r_m2)) (p_sub p)" and
          s="diff_use_env (lift_use_env (dir_subst_penv t_sub p_sub r_x2) (p_sub p)) (dir_subst_penv t_sub p_sub r_m2)" in subst)
         apply (rule_tac lift_diff_use_env)
        apply (simp add: comp_sol_subst_penv)
        apply (rule_tac rhs_unroll_dcl_use_env)
        apply (rule_tac dist_diff_leq_use_env)
        apply (rule_tac mini_disj_diff_leq_use_env2)
         apply (simp add: lift_sol_subst_penvx)
         apply (rule_tac comp_leq_use_env2)
         apply (rule_tac self_comp_leq_use_env2)
        apply (rule_tac mini_disj_lift_use_env_rev)
        apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_s2" in mini_disj_leq_use_env2)
         apply (simp)
        apply (rule_tac infer_x_leq_use_env)
        apply (simp)(*
         apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))" in disj_leq_use_env2)
          apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p)))" in disj_leq_use_env1)
           apply (simp)
          apply (rule_tac comp_leq_use_env1)
          apply (rule_tac c_list="cl1" in infer_m_leq_use_env)
          apply (simp)
         apply (simp add: lift_sol_subst_penvx)
         apply (rule_tac self_comp_leq_use_env2)
        apply (rule_tac comp_leq_use_env2)
        apply (simp add: lift_sol_subst_penvx)
        apply (rule_tac self_comp_leq_use_env2)*)
    (* - affinity requirements *)
       apply (rule_tac max_aff_leq)
        apply (rule_tac dir_aff_leq)
         apply (simp_all)
       apply (rule_tac tau="tau_xa" in dir_aff_leq)
        apply (simp_all)
    (* - disjointness requirement *)
      apply (rule_tac r_s="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" in disj_leq_use_env2)
       apply (rule_tac r_s="dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))" in disj_leq_use_env1)
        apply (simp)
       apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))" and
          s="lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p)" in subst)
        apply (rule_tac lift_sol_subst_penvx)
       apply (rule_tac dist_lift_leq_use_env)
       apply (rule_tac self_diff_leq_use_env)
      apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
          s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (p_sub p)" in subst)
       apply (rule_tac lift_sol_subst_penvx)
      apply (rule_tac dist_lift_leq_use_env)
      apply (rule_tac self_diff_leq_use_env)
(*
      apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))" in disj_leq_use_env2)
       apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p)))" in disj_leq_use_env1)
        apply (simp add: comp_sol_subst_penv)
       apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))" and
          s="lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p)" in subst)
        apply (rule_tac lift_sol_subst_penvx)
       apply (rule_tac comp_leq_use_env2)
       apply (rule_tac dist_lift_leq_use_env)
       apply (rule_tac self_diff_leq_use_env)
      apply (rule_tac comp_leq_use_env2)
      apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
          s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (p_sub p)" in subst)
       apply (rule_tac lift_sol_subst_penvx)
      apply (rule_tac dist_lift_leq_use_env)
      apply (rule_tac self_diff_leq_use_env)*)
    (* - final existential *)
     apply (rule_tac x="dir_subst_penv t_sub p_sub (comp_var_env r_m1 r_m2)" in exI)
     apply (auto)
        apply (rule_tac rhs_diff_leq_use_env)
        apply (rule_tac id_leq_use_env)
       apply (rule_tac dist_diff_leq_use_env)
       apply (rule_tac if_zero_leq_var_env)
       apply (rule_tac dist_comp_leq_var_env)
        apply (rule_tac comp_leq_var_env1)
        apply (rule_tac comp_leq_var_env2)
        apply (rule_tac id_leq_use_env)
       apply (rule_tac comp_leq_var_env2)
       apply (rule_tac comp_leq_var_env2)
       apply (rule_tac id_leq_use_env)
      apply (rule_tac dist_comp_leq_var_env)
       apply (rule_tac comp_leq_var_env1)
       apply (rule_tac comp_leq_var_env1)
       apply (rule_tac c_list="cl1" in infer_m_leq_use_env)
       apply (auto)
      apply (rule_tac comp_leq_var_env2)
      apply (rule_tac comp_leq_var_env1)
      apply (rule_tac c_list="cl2" in infer_m_leq_use_env)
      apply (simp)
     apply (simp add: pair_req_def)
     apply (auto)
      apply (rule_tac leq_empty_use_env)
     apply (case_tac "sol_subst_perm p_sub (SVar p) = NoPerm")
      apply (simp)
     apply (simp add: if_zero_pos_var_env)
     apply (rule_tac dist_diff_leq_use_env)
     apply (simp add: comp_sol_subst_penv)
     apply (rule_tac dist_comp_leq_use_env)
      apply (rule_tac comp_leq_use_env1)
      apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x1 (SVar p))" and
        s="lift_use_env (dir_subst_penv t_sub p_sub r_x1) (p_sub p)" in subst)
       apply (rule_tac lift_sol_subst_penvx)
      apply (rule_tac dist_lift_leq_use_env)
      apply (rule_tac self_diff_leq_use_env)
     apply (rule_tac comp_leq_use_env2)
     apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
        s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (p_sub p)" in subst)
      apply (rule_tac lift_sol_subst_penvx)
     apply (rule_tac dist_lift_leq_use_env)
     apply (rule_tac self_diff_leq_use_env)
    (* if case. prelim: satisfiability sub-constraints *)
    apply (cut_tac p_sub="p_sub" and ?cl2.0="cl1 @ cl2 @ cl3" in sol_sat_append2)
     apply (simp)
    apply (cut_tac p_sub="p_sub" and ?cl2.0="cl2 @ cl3" in sol_sat_append2)
     apply (simp)
    (* - prelim: disjointness constraints *)
    apply (cut_tac p_sub="p_sub" and r_x="r_m1" and r_s="comp_var_env r_s2 r_s3" in sol_sat_mini_disj_use_env)
       apply (rule_tac sol_sat_append1)
       apply (simp)
      apply (rule_tac r_s="comp_var_env r_s1 (comp_var_env r_s2 r_s3)" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom1)
      apply (rule_tac infer_m_sub_dom)
      apply (auto)
     apply (rule_tac r_s="comp_var_env r_s1 (comp_var_env r_s2 r_s3)" in finite_sub_dom)
      apply (simp)
     apply (rule_tac comp_sub_dom2)
     apply (rule_tac id_sub_dom)
    (* - induction on e1 *)
    apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x1) (dir_subst_penv t_sub p_sub r_m1)" in exI)
    apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub (comp_var_env r_s1 (comp_var_env r_s2 r_s3))) (dir_subst_penv t_sub p_sub r_m1)" in exI)
    apply (auto)
     apply (rule_tac t="dir_subst_penv t_sub p_sub (comp_var_env r_s1 (comp_var_env r_s2 r_s3))"
      and s="comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub (comp_var_env r_s2 r_s3))" in subst)
      apply (simp add: comp_sol_subst_penv)
    apply (cut_tac env="env" and delta="delta" and ds="ds" and e="e1" and tau="t1" and r_s="r_s1" and r_x="r_x1" and r_m="r_m1" and
        c_list="cl1" and ds'="ds2" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_if_ih)
        apply (auto)
      apply (rule_tac sol_sat_append1)
      apply (simp)
     apply (rule_tac well_typed_comp_perms_prec)
     apply (case_tac t1)
            apply (auto)
      apply (simp add: full_subst_type_def)
     apply (simp add: full_subst_type_def)
    (* - induction on e2 *)
    apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x2) (dir_subst_penv t_sub p_sub (comp_var_env r_m1 (comp_var_env r_m2 r_m3)))" in exI)
    apply (auto)
     apply (simp add: comp_sol_subst_penv)
     apply (cut_tac env="env" and delta="delta" and ds="ds2" and e="e2" and tau="t2" and r_s="r_s2" and r_x="r_x2" and r_m="r_m2" and
        c_list="cl2" and ds'="ds3" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_if_ih)
        apply (auto)
      apply (rule_tac sol_sat_append1)
      apply (simp)
     apply (rule_tac ?r_s2.0="diff_use_env (diff_use_env (comp_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_s1)
        (dir_subst_penv t_sub p_sub r_m1)) (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_s3)))
        (dir_subst_penv t_sub p_sub r_m2)) (dir_subst_penv t_sub p_sub r_m3)" and rx="diff_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x2)
        (dir_subst_penv t_sub p_sub r_m2)) (dir_subst_penv t_sub p_sub r_m3)" in well_typed_simul_end_perm)
        apply (rule_tac ?r_s1.0="comp_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub r_m1))
          (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_s3))" in well_typed_incr_start_perm)
         apply (rule_tac well_typed_diff_end_perm)
          apply (rule_tac well_typed_comp_perms_prec2)
          apply (rule_tac well_typed_comp_perms_prec)
          apply (simp_all)
         apply (rule_tac comp_leq_use_env2)
         apply (rule_tac comp_leq_use_env2)
         apply (rule_tac infer_m_leq_use_env)
         apply (auto)
        apply (rule_tac dist_comp_leq_use_env)
         apply (rule_tac dist_diff_leq_use_env)
         apply (rule_tac self_comp_leq_use_env1)
        apply (rule_tac rhs_dist_dcl_use_env)
        apply (rule_tac comp_leq_use_env2)
        apply (rule_tac mini_disj_diff_leq_use_env2)
         apply (rule_tac id_leq_use_env)
        apply (simp)
       apply (rule_tac lhs_dist_dcl_use_env)
       apply (rule_tac rhs_fold_dcl_use_env)
       apply (rule_tac dist_comp_leq_use_env)
        apply (rule_tac lhs_unroll_dcl_use_env)
        apply (rule_tac dist_diff_leq_use_env)
        apply (rule_tac self_comp_leq_use_env1)
       apply (rule_tac dist_diff_leq_use_env_gen)
        apply (rule_tac self_comp_leq_use_env2)
       apply (rule_tac self_comp_leq_use_env2)
      apply (rule_tac dist_diff_leq_use_env)
      apply (rule_tac comp_leq_use_env2)
      apply (rule_tac comp_leq_use_env1)
      apply (rule_tac c_list="cl2" in infer_x_leq_use_env)
      apply (simp)
     apply (rule_tac lhs_fold_dcl_use_env)
     apply (rule_tac rhs_unroll_dcl_use_env)
     apply (rule_tac dist_diff_leq_use_env)
     apply (rule_tac mini_disj_diff_leq_use_env2)
      apply (rule_tac id_leq_use_env)
     apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_s3)" in mini_disj_leq_use_env2)
      apply (simp)
     apply (rule_tac comp_leq_use_env1)
     apply (rule_tac c_list="cl2" in infer_x_leq_use_env)
     apply (simp)
      (* - induction on e3 *)
    apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x3) (dir_subst_penv t_sub p_sub (comp_var_env r_m1 (comp_var_env r_m2 r_m3)))" in exI)
    apply (auto)
     apply (simp add: comp_sol_subst_penv)
     apply (cut_tac env="env" and delta="delta" and ds="ds3" and e="e3" and tau="t3" and r_s="r_s3" and r_x="r_x3" and r_m="r_m3" and
        c_list="cl3" and ds'="ds'" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_if_ih)
        apply (auto)
      apply (rule_tac sol_sat_append2)
      apply (simp)
     apply (rule_tac ?r_s2.0="diff_use_env (diff_use_env (comp_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_s1)
        (dir_subst_penv t_sub p_sub r_m1)) (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_s3)))
        (dir_subst_penv t_sub p_sub r_m3)) (dir_subst_penv t_sub p_sub r_m2)" and rx="diff_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x3)
        (dir_subst_penv t_sub p_sub r_m3)) (dir_subst_penv t_sub p_sub r_m2)" in well_typed_simul_end_perm)
        apply (rule_tac ?r_s1.0="comp_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub r_m1))
          (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_s3))" in well_typed_incr_start_perm)
         apply (rule_tac well_typed_diff_end_perm)
          apply (rule_tac well_typed_comp_perms_prec2)
          apply (rule_tac well_typed_comp_perms_prec2)
          apply (simp add: dir_subst_type_eq)
         apply (rule_tac comp_leq_use_env2)
         apply (rule_tac comp_leq_use_env1)
         apply (rule_tac infer_m_leq_use_env)
         apply (auto)
        apply (rule_tac dist_comp_leq_use_env)
         apply (rule_tac dist_diff_leq_use_env)
         apply (rule_tac self_comp_leq_use_env1)
        apply (rule_tac mini_disj_diff_leq_use_env2)
         apply (rule_tac self_comp_leq_use_env2)
        apply (simp)
       apply (rule_tac lhs_dist_dcl_use_env)
       apply (rule_tac rhs_fold_dcl_use_env)
       apply (rule_tac dist_comp_leq_use_env)
        apply (rule_tac lhs_unroll_dcl_use_env)
        apply (rule_tac dist_diff_leq_use_env_gen)
         apply (rule_tac self_comp_leq_use_env1)
        apply (simp add: comm_comp_use_env)
        apply (rule_tac id_leq_use_env)
       apply (rule_tac dist_diff_leq_use_env_gen)
        apply (rule_tac self_comp_leq_use_env2)
       apply (simp add: comm_comp_use_env)
       apply (rule_tac self_comp_leq_use_env2)
      apply (rule_tac dist_diff_leq_use_env)
      apply (rule_tac comp_leq_use_env2)
      apply (rule_tac comp_leq_use_env2)
      apply (rule_tac infer_x_leq_use_env)
      apply (auto)
     apply (rule_tac lhs_fold_dcl_use_env)
     apply (simp add: comm_comp_use_env)
     apply (rule_tac rhs_unroll_dcl_use_env)
     apply (rule_tac dist_diff_leq_use_env_gen)
      apply (rule_tac mini_disj_diff_leq_use_env2)
       apply (rule_tac id_leq_use_env)
      apply (rule_tac r_s="comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub r_s3)" in mini_disj_leq_use_env2)
       apply (simp)
      apply (rule_tac comp_leq_use_env2)
      apply (rule_tac infer_x_leq_use_env)
      apply (auto)
     apply (rule_tac id_leq_use_env)
    apply (simp add: dist_diff_comp_use_env)
    apply (simp add: comp_sol_subst_penv)
    (* lam case *)
   apply (simp add: full_subst_type_def)
   apply (rule_tac x="dir_subst_penv t_sub p_sub (rem_var_env r_s' (Var x1a))" in exI)
   apply (auto)
    (* - induction on e *)
      apply (cut_tac env="add_env env (Var x1a) a" and delta="delta" and ds="insert a ds" and e="e" and tau="t2" and r_s="r_s'" and r_x="r_x'" and r_m="r_m'" and
        c_list="cl" and ds'="ds2" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_lam_ih)
         apply (auto)
        apply (simp add: full_subst_type_def)
       apply (rule_tac sol_sat_append2)
       apply (simp)
      apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x') (dir_subst_penv t_sub p_sub r_m')" in exI)
      apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_s') (dir_subst_penv t_sub p_sub r_m')" in exI)
      apply (simp add: rem_sol_subst_penv)
      apply (rule_tac ?r_s1.0="add_use_env (rem_use_env (dir_subst_penv t_sub p_sub r_s') (Var x1a)) (Var x1a)
        (dir_subst_permx t_sub p_sub (r_s' (Var x1a)))" in well_typed_incr_start_perm)
       apply (case_tac "dir_subst_permx t_sub p_sub (r_s' (Var x1a)) \<noteq> (dir_subst_penv t_sub p_sub r_s') (Var x1a)")
        apply (simp add: dir_subst_penv_def)
       apply (simp add: add_rem_use_env)
       apply (cut_tac t_sub="t_sub" and tau_n="tau_n" and x="x1a" and env="env" and a="a" and p_sub="p_sub" in add_sol_subst_tenv)
       apply (simp add: full_subst_type_def)
      apply (rule_tac dist_add_leq_use_env_gen)
       apply (rule_tac id_leq_use_env)
      apply (simp)
     apply (rule_tac sol_sat_aff_use_envx)
      apply (rule_tac sol_sat_append1)
      apply (simp_all)
    apply (rule_tac id_leq_use_env)
   apply (rule_tac x="empty_use_env" in exI)
   apply (auto)
      apply (simp add: subst_empty_var_env)
      apply (rule_tac id_leq_use_env)
     apply (rule_tac id_leq_use_env)
    apply (rule_tac leq_empty_use_env)
   apply (simp add: subst_empty_var_env)
   apply (rule_tac id_leq_use_env)
    (* app case. prelim: satisfiability constraints *)
  apply (cut_tac p_sub="p_sub" and ?cl2.0="semi_disj_crn r_m2 r_x1 d @ semi_disj_crn r_m1 r_s2 d @ cl1 @ cl2" in sol_sat_append2)
   apply (simp)
  apply (cut_tac p_sub="p_sub" and ?cl2.0="semi_disj_crn r_m1 r_s2 d @ cl1 @ cl2" in sol_sat_append2)
   apply (simp)
  apply (cut_tac p_sub="p_sub" and ?cl2.0="cl1 @ cl2" in sol_sat_append2)
   apply (simp)
    (* - prelim: disjointness constraints *)
  apply (cut_tac p_sub="p_sub" in sol_sat_disj_use_env)
     apply (rule_tac sol_sat_append1)
     apply (simp)
    apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 r_x1) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
     apply (simp)
    apply (rule_tac comp_sub_dom1)
    apply (rule_tac comp_sub_dom2)
    apply (rule_tac id_sub_dom)
   apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 r_x1) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
    apply (simp)
   apply (rule_tac comp_sub_dom2)
   apply (rule_tac comp_sub_dom2)
   apply (rule_tac id_sub_dom)
    (* - prelim: semi-disjointness constraint 1 *)
  apply (cut_tac r_x="r_m2" and r_s="r_x1" and p_sub="p_sub" in sol_sat_mini_disj_use_env)
     apply (rule_tac sol_sat_append1)
     apply (simp)
      apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 r_x1) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom2)
      apply (rule_tac comp_sub_dom1)
      apply (rule_tac infer_m_sub_dom)
      apply (simp)
     apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 r_x1) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
      apply (simp)
     apply (rule_tac comp_sub_dom1)
     apply (rule_tac comp_sub_dom2)
     apply (rule_tac id_sub_dom)
    (* - prelim: semi-disjointness constraint 2 *)
  apply (cut_tac r_x="r_m1" and r_s="r_s2" and p_sub="p_sub" in sol_sat_mini_disj_use_env)
     apply (rule_tac sol_sat_append1)
     apply (simp)
      apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 r_x1) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
       apply (simp)
      apply (rule_tac comp_sub_dom1)
      apply (rule_tac comp_sub_dom1)
      apply (rule_tac infer_m_sub_dom)
      apply (simp)
     apply (rule_tac r_s="comp_var_env (comp_var_env r_s1 r_x1) (comp_var_env r_s2 (lift_var_env r_x2 (SVar p)))" in finite_sub_dom)
      apply (simp)
     apply (rule_tac comp_sub_dom2)
     apply (rule_tac comp_sub_dom1)
     apply (rule_tac id_sub_dom)   
    (* - prelim: inequalities *)(*
  apply (cut_tac c_list="cl1" and r_m="r_m1" and r_s="r_s1" and t_sub="t_sub" and p_sub="p_sub" in infer_m_leq_use_env)
   apply (simp)
  apply (cut_tac r_x="r_m2" and r_s="r_s2" and r="SVar p" and t_sub="t_sub" and p_sub="p_sub" in lift_leq_var_env)
   apply (rule_tac c_list="cl2" in infer_m_leq_use_env)
   apply (simp)*)
  apply (cut_tac c_list="cl1" and r_x="r_x1" and r_s="r_s1" and t_sub="t_sub" and p_sub="p_sub" in infer_x_leq_use_env)
   apply (simp)
  apply (cut_tac c_list="cl2" and r_x="r_x2" and r_s="r_s2" and t_sub="t_sub" and p_sub="p_sub" in infer_x_leq_use_env)
   apply (simp)
  apply (cut_tac r_x="r_x2" and r_s="r_s2" and r="SVar p" in lift_leq_var_env)
    apply (simp)
    (* - existentials *)
  apply (rule_tac x="full_subst_type t_sub p_sub tau_n t1" in exI)
  apply (rule_tac x="sol_subst_perm p_sub (SVar p)" in exI)
  apply (rule_tac x="sol_subst_aff p_sub (AffVar q)" in exI)
  apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub (comp_var_env (comp_var_env r_s1 r_x1)
      (comp_var_env r_s2 (lift_var_env r_x2 (SVar p))))) (dir_subst_penv t_sub p_sub r_m1)" in exI)
  apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x1) (dir_subst_penv t_sub p_sub r_m1)" in exI)
  apply (auto)
    (* - induction for e1. *)
  apply (simp add: comp_sol_subst_penv)
   apply (cut_tac env="env" and delta="delta" and ds="ds" and e="e1" and tau="tau_f" and r_s="r_s1" and r_x="r_x1" and r_m="r_m1" and
        c_list="cl1" and ds'="ds2" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_app_ih)
      apply (auto)
    apply (rule_tac sol_sat_append1)
    apply (simp)
   apply (rule_tac well_typed_comp_perms_prec)
   apply (rule_tac well_typed_comp_perms_prec)
   apply (simp add: dir_subst_type_eq)
    (* - induction for e2. *)
  apply (rule_tac x="diff_use_env (dir_subst_penv t_sub p_sub r_x2) (dir_subst_penv t_sub p_sub r_m2)" in exI)
  apply (rule_tac x="diff_use_env (diff_use_env (dir_subst_penv t_sub p_sub (comp_var_env (comp_var_env r_s1 r_x1)
      (comp_var_env r_s2 (lift_var_env r_x2 (SVar p))))) (dir_subst_penv t_sub p_sub r_m1)) (dir_subst_penv t_sub p_sub r_m2)" in exI)
  apply (auto)
   apply (simp add: comp_sol_subst_penv)
   apply (cut_tac env="env" and delta="delta" and ds="ds2" and e="e2" and tau="t1" and r_s="r_s2" and r_x="r_x2" and r_m="r_m2" and
        c_list="cl2" and ds'="ds3" and t_sub="t_sub" and p_sub="p_sub" and tau_n="tau_n" in ivl_app_ih)
      apply (auto)
    apply (rule_tac sol_sat_append2)
    apply (simp) 
   apply (rule_tac r_c="diff_use_env (comp_use_env (diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub r_x1))
      (dir_subst_penv t_sub p_sub r_m1)) (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p)))))
                (dir_subst_penv t_sub p_sub r_m2)" in well_typed_decr_end_perm)
     apply (rule_tac ?r_s1.0="comp_use_env (diff_use_env (comp_use_env (dir_subst_penv t_sub p_sub r_s1) (dir_subst_penv t_sub p_sub r_x1))
      (dir_subst_penv t_sub p_sub r_m1)) (comp_use_env (dir_subst_penv t_sub p_sub r_s2) (dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))))" in well_typed_incr_start_perm)
      apply (rule_tac well_typed_comp_perms_prec2)
      apply (rule_tac well_typed_comp_perms_prec)
      apply (simp)
     apply (rule_tac rhs_dist_dcl_use_env)
     apply (rule_tac dist_comp_leq_use_env)
      apply (rule_tac self_comp_leq_use_env1)
     apply (rule_tac comp_leq_use_env2)
     apply (rule_tac mini_disj_diff_leq_use_env)
      apply (rule_tac id_leq_use_env)
     apply (rule_tac mini_disj_comp_use_env_alt)
      apply (simp)
     apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
        s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))" in subst)
      apply (rule_tac lift_sol_subst_penv)
     apply (rule_tac mini_disj_lift_use_env_rev)
     apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_s2" in mini_disj_leq_use_env2)
      apply (simp_all)
    apply (rule_tac dist_diff_leq_use_env)
    apply (rule_tac lhs_dist_dcl_use_env)
    apply (rule_tac dist_comp_leq_use_env)
     apply (rule_tac self_comp_leq_use_env1)
    apply (rule_tac comp_leq_use_env2)
    apply (rule_tac self_diff_leq_use_env)
   apply (rule_tac dist_diff_leq_use_env)
   apply (rule_tac mini_disj_diff_leq_use_env2)
    apply (rule_tac comp_leq_use_env2)
    apply (rule_tac comp_leq_use_env2)
    apply (rule_tac lift_leq_var_env)
    apply (rule_tac id_leq_use_env)
   apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_s2" in mini_disj_leq_use_env2)
    apply (simp_all)
    (* - final existentials. *)
  apply (rule_tac x="dir_subst_penv t_sub p_sub (comp_var_env (comp_var_env r_m1 r_x1) (comp_var_env r_m2 (lift_var_env r_x2 (SVar p))))" in exI)
  apply (simp add: comp_sol_subst_penv)
  apply (auto)
    (* - end permission bound *)
       apply (rule_tac rhs_fold_dcl_use_env)
       apply (rule_tac rhs_fold_dcl_use_env)
       apply (rule_tac dist_diff_leq_use_env_gen)
        apply (rule_tac id_leq_use_env)
       apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
        s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))" in subst)
        apply (rule_tac lift_sol_subst_penv)
       apply (rule_tac dist_comp_leq_use_env)
        apply (rule_tac comp_leq_use_env1)
        apply (rule_tac self_comp_leq_use_env1)
       apply (rule_tac dist_comp_leq_use_env)
        apply (rule_tac comp_leq_use_env2)
        apply (rule_tac self_comp_leq_use_env1)
       apply (rule_tac dist_comp_leq_use_env)
        apply (rule_tac dist_comp_leq_use_env)
         apply (rule_tac comp_leq_use_env1)
         apply (rule_tac comp_leq_use_env2)
         apply (rule_tac self_diff_leq_use_env)
        apply (rule_tac comp_leq_use_env2)
        apply (rule_tac comp_leq_use_env2)
        apply (auto)
        apply (rule_tac dist_lift_leq_use_env)
        apply (rule_tac self_diff_leq_use_env)
       apply (rule_tac id_leq_use_env)
    (* - subtractability bound *)
      apply (rule_tac dist_comp_leq_use_env)
       apply (rule_tac mini_disj_diff_leq_use_env2)
        apply (rule_tac dist_diff_leq_use_env)
        apply (rule_tac comp_leq_use_env1)
        apply (rule_tac self_comp_leq_use_env2)
       apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_x1" in mini_disj_leq_use_env2)
        apply (simp)
       apply (rule_tac self_diff_leq_use_env)
      apply (rule_tac t="lift_use_env (diff_use_env (dir_subst_penv t_sub p_sub r_x2) (dir_subst_penv t_sub p_sub r_m2)) (p_sub p)"
        and s="diff_use_env (lift_use_env (dir_subst_penv t_sub p_sub r_x2) (p_sub p)) (dir_subst_penv t_sub p_sub r_m2)" in subst)
       apply (rule_tac lift_diff_use_env)
      apply (rule_tac dist_diff_leq_use_env)
       apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
        s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))" in subst)
       apply (rule_tac lift_sol_subst_penv)
      apply (auto)
      apply (rule_tac mini_disj_diff_leq_use_env2)
       apply (rule_tac comp_leq_use_env2)
       apply (rule_tac self_comp_leq_use_env2)
      apply (rule_tac mini_disj_lift_use_env_rev)
      apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_s2" in mini_disj_leq_use_env2)
       apply (simp)
      apply (rule_tac infer_x_leq_use_env)
      apply (simp)
    (* - disjointness *)
     apply (rule_tac r_s="dir_subst_penv t_sub p_sub r_x1" in disj_leq_use_env1)
      apply (rule_tac r_s="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" in disj_leq_use_env2)
       apply (simp)
      apply (rule_tac t="dir_subst_penv t_sub p_sub (lift_var_env r_x2 (SVar p))" and
        s="lift_use_env (dir_subst_penv t_sub p_sub r_x2) (sol_subst_perm p_sub (SVar p))" in subst)
       apply (rule_tac lift_sol_subst_penv)
      apply (auto)
      apply (rule_tac dist_lift_leq_use_env)
      apply (rule_tac self_diff_leq_use_env)
     apply (rule_tac self_diff_leq_use_env)
    (* - relative bound *)
    apply (rule_tac dist_diff_leq_use_env)
    apply (rule_tac if_zero_leq_var_env)
    apply (simp add: comp_sol_subst_penv)
    apply (rule_tac dist_comp_leq_use_env)
     apply (rule_tac comp_leq_use_env1)
     apply (rule_tac self_comp_leq_use_env2)
    apply (rule_tac comp_leq_use_env2)
    apply (rule_tac self_comp_leq_use_env2)
    (* - subtractant bound *)
   apply (rule_tac dist_comp_leq_use_env)
    apply (rule_tac comp_leq_use_env1)
    apply (rule_tac dist_comp_leq_use_env)
     apply (rule_tac comp_leq_use_env1)
     apply (rule_tac c_list="cl1" in infer_m_leq_use_env)
     apply (auto)
    apply (rule_tac self_comp_leq_use_env2)
   apply (rule_tac dist_comp_leq_use_env)
    apply (rule_tac comp_leq_use_env2)
    apply (rule_tac comp_leq_use_env1)
    apply (rule_tac c_list="cl2" in infer_m_leq_use_env)
    apply (auto)
   apply (rule_tac comp_leq_use_env2)
   apply (rule_tac self_comp_leq_use_env2)
    (* - requirements bound *)
  apply (simp add: app_req_def)
  apply (auto)
   apply (rule_tac leq_empty_use_env)
  apply (rule_tac dist_diff_leq_use_env_gen)
   apply (case_tac "dir_subst_permx t_sub p_sub (XType a) = NoPerm")
    apply (case_tac "req_type (full_subst_type t_sub p_sub tau_n (VarScheme a))")
      apply (auto)
     apply (simp add: full_subst_type_def)
    apply (simp add: full_subst_type_def)
   apply (simp add: if_zero_pos_var_env)
   apply (simp add: comp_sol_subst_penv)
   apply (rule_tac dist_comp_leq_use_env)
    apply (rule_tac comp_leq_use_env1)
    apply (rule_tac self_diff_leq_use_env)
   apply (rule_tac comp_leq_use_env2)
   apply (rule_tac diff_leq_use_env)
   apply (rule_tac lift_leq_var_env)
   apply (rule_tac id_leq_use_env)
  apply (rule_tac self_comp_leq_use_env2) 
  done

end